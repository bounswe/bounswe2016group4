# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-21 12:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import unixtimestampfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentModel',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment_text', models.TextField(null=True)),
                ('commented_object_id', models.PositiveIntegerField()),
                ('comment_date', unixtimestampfield.fields.UnixTimeStampField(auto_now_add=True)),
                ('comment_image', models.URLField(blank=True)),
                ('comment_vote', models.IntegerField(default=0)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('mptt_level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConsumptionHistory',
            fields=[
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', unixtimestampfield.fields.UnixTimeStampField(auto_now_add=True)),
                ('fid', models.PositiveIntegerField()),
                ('f_name', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='FoodModel',
            fields=[
                ('food_id', models.AutoField(primary_key=True, serialize=False)),
                ('food_description', models.CharField(max_length=300)),
                ('food_name', models.TextField()),
                ('food_image', models.URLField(blank=True)),
                ('food_rate', models.FloatField(default=0)),
                ('food_rate_count', models.IntegerField(default=0)),
                ('food_recipe', models.TextField(default=0)),
                ('protein_value', models.FloatField(default=0)),
                ('fat_value', models.FloatField(default=0)),
                ('carbohydrate_value', models.FloatField(default=0)),
                ('fiber_value', models.FloatField(default=0)),
                ('calorie_value', models.FloatField(default=0)),
                ('sugar_value', models.FloatField(default=0)),
                ('serving_weight_grams', models.FloatField(default=0)),
                ('vitamin_A', models.FloatField(default=0)),
                ('vitamin_C', models.FloatField(default=0)),
                ('vitamin_D', models.FloatField(default=0)),
                ('vitamin_E', models.FloatField(default=0)),
                ('vitamin_K', models.FloatField(default=0)),
                ('thiamin', models.FloatField(default=0)),
                ('riboflavin', models.FloatField(default=0)),
                ('niacin', models.FloatField(default=0)),
                ('vitamin_B6', models.FloatField(default=0)),
                ('folatem', models.FloatField(default=0)),
                ('vitamin_B12', models.FloatField(default=0)),
                ('pantothenic_acid', models.FloatField(default=0)),
                ('choline', models.FloatField(default=0)),
                ('calcium', models.FloatField(default=0)),
                ('copper', models.FloatField(default=0)),
                ('flouride', models.FloatField(default=0)),
                ('iron_Fe', models.FloatField(default=0)),
                ('magnesium', models.FloatField(default=0)),
                ('manganese', models.FloatField(default=0)),
                ('sodium_Na', models.FloatField(default=0)),
                ('phosphorus', models.FloatField(default=0)),
                ('selenium', models.FloatField(default=0)),
                ('zinc', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='IngredientModel',
            fields=[
                ('ingredient_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ListModel',
            fields=[
                ('list_id', models.AutoField(primary_key=True, serialize=False)),
                ('list_menu', models.BooleanField()),
                ('list_name', models.TextField()),
                ('list_description', models.TextField()),
                ('list_content', models.ManyToManyField(blank=True, related_name='foods', to='kwue.FoodModel')),
            ],
        ),
        migrations.CreateModel(
            name='TagModel',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('tag_label', models.TextField(blank=True)),
                ('semantic_tag_item', models.TextField(blank=True)),
                ('semantic_tag_item_label', models.TextField(blank=True)),
                ('semantic_tag_item_description', models.TextField(blank=True)),
                ('tagged_object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.TextField()),
                ('user_nick', models.TextField(blank=True)),
                ('user_email_address', models.EmailField(max_length=254)),
                ('user_password', models.CharField(max_length=25)),
                ('user_image', models.URLField(blank=True, default='')),
                ('user_type', models.BooleanField(default=False)),
                ('protein_lower_bound', models.FloatField(default=0)),
                ('fat_lower_bound', models.FloatField(default=0)),
                ('carbohydrate_lower_bound', models.FloatField(default=0)),
                ('calorie_lower_bound', models.FloatField(default=0)),
                ('sugar_lower_bound', models.FloatField(default=0)),
                ('protein_upper_bound', models.FloatField(default=1000)),
                ('fat_upper_bound', models.FloatField(default=100000)),
                ('carbohydrate_upper_bound', models.FloatField(default=100000)),
                ('calorie_upper_bound', models.FloatField(default=10000)),
                ('sugar_upper_bound', models.FloatField(default=10000)),
                ('unwanted_ingredients', models.ManyToManyField(blank=True, related_name='wantedIngs', to='kwue.IngredientModel')),
                ('wanted_ingredients', models.ManyToManyField(blank=True, related_name='unwantedIngs', to='kwue.IngredientModel')),
            ],
        ),
        migrations.AddField(
            model_name='listmodel',
            name='list_follower',
            field=models.ManyToManyField(blank=True, related_name='followers', to='kwue.UserModel'),
        ),
        migrations.AddField(
            model_name='listmodel',
            name='list_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kwue.UserModel'),
        ),
        migrations.AddField(
            model_name='foodmodel',
            name='food_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kwue.UserModel'),
        ),
        migrations.AddField(
            model_name='foodmodel',
            name='ingredient_list',
            field=models.ManyToManyField(to='kwue.IngredientModel'),
        ),
        migrations.AddField(
            model_name='consumptionhistory',
            name='food',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kwue.FoodModel'),
        ),
        migrations.AddField(
            model_name='consumptionhistory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kwue.UserModel'),
        ),
        migrations.AddField(
            model_name='commentmodel',
            name='comment_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kwue.UserModel'),
        ),
        migrations.AddField(
            model_name='commentmodel',
            name='content_type',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='commentmodel',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='kwue.CommentModel'),
        ),
    ]
